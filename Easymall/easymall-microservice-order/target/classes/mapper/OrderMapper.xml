<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.tedu.order.mapper.OrderMapper">

  	<resultMap type="Order" id="orderRM">
	<!-- 查询的主要关联字段 order_id -->
	<id property="orderId" column="order_id"/>
	<!-- 设置对多关系数据的封装 --><!-- select属性的值,指向一个select标签 -->
	<collection property="orderItems" 
	javaType="ArrayList" ofType="OrderItem" column="order_id" 
	select="queryOrderItems"></collection>
	</resultMap>
	
	<select id="queryMyOrder" parameterType="String" resultMap="orderRM">
	<!-- 单表查询,不使用关联 ,查主表-->
	select * from t_order where user_id=#{userId} order by order_time desc
	</select>
	<select id="queryOrderItems" parameterType="String" resultType="OrderItem">
	select * from t_order_item where order_id = #{orderId}
	</select>
	
	<insert id="saveOrder" parameterType="Order">
		<!-- insert t_order -->
		insert into t_order (order_id,order_money,order_paystate,order_receiverinfo,order_time,user_id) 
		values (#{orderId},#{orderMoney},#{orderPaystate},#{orderReceiverinfo},#{orderTime},#{userId});
	    <!-- insert t_order_item -->
		<!-- for(OrderItem item:orderItems) -->
		<foreach collection="orderItems" item="item" separator=",">
		 insert into t_order_item (order_id,product_id,num,product_name,product_image,product_price)
		 values (#{orderId},#{item.productId},#{item.num},#{item.productName},#{item.productImage},#{item.productPrice})
        </foreach>
	</insert>
	
	<delete id="deleteOrder" parameterType="Order">
		delete a,b from t_order a,t_order_item b where a.order_id=b.order_id and a.order_id=#{orderId}
	</delete>
</mapper>